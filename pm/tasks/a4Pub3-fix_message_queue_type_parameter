Task: a4Pub3-fix_message_queue_type_parameter
==============================================================================

Motivation
----------

- This problem manifests itself when using the message_type parameter with message queues on Rigel. Take a look at this:

(from components/message-queue/implementation.c:34)

    {{#message_queues.length}}
    {{#message_queues}}
    static uint8_t message_queue_{{name}}_messages[{{queue_length}}][{{message_size}}];
    {{/message_queues}}
    static struct message_queue message_queues[] =
    {
    {{#message_queues}}
        {
            (uint8_t*)message_queue_{{name}}_messages,
    {{#message_size}}
            {{message_size}},
    {{/message_size}}
    {{#message_type}}
            sizeof({{message_type}}),
    {{/message_type}}

- In the above, line 36 you can see that {{message_size}} is used to provide the second dimension of message_queue_x_messages.

- However, in the documentation it is listed (and you can see in line 47):

        == message_queues/message_queue/message_type ==
    > This configuration item specifies the C type of each message in the queue
    > from which the size of the messages is derived. This is an optional configuration
    > item with no default. Either message_size or message_type needs to be specified
    > for a message queue.

- With the above implementation, the absence of message_size results in python replacing it with 'None', hence a compiler error come gcc

- This means you can't use message_type.

Goals
--------

- Fix this template so that message_type can be used as described.

Test Plan
---------

- Verify that the template will compile when using message_type, and ensure that sizeof is correctly interpreting the type from schema.
