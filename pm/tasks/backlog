audit-preempt-disable
    Audit all disabling of preemption in the RTOS and ensure that these regions are as tight as safely possible.

signal-prio-inherit
    Currently, priority inheritance is only supported by sched-prio-inherit for mutexes.
    Arguably it would be more intuitive if signals provided priority inheritance for the typical case where a task waits for a specific signal from another task.

ppc-fp-ctxt-switch
    For users who need it, floating-point registers on PowerPC need to be stored and restored on context switch.

ppc-test-coverage
    Context switch test coverage for FP + ABI-specific functionality on PowerPC.

ppc-toolchain
    x.py ppc support with fully-integrated ppc toolchain, qemu.

message-queues
    improve test coverage so that regression tests are run continuously

cleanup-prefix-hardcoding
    Get rid of the 'rtos_' prefix wherever it's hardcoded to facilitate access by other modules, once the 'rtos-config-global' feature allows us to simply determine the prefix from the RTOS module's configuration environment.

variant-specific-doc-content
    Sometimes we have features or config options that are specific to a RTOS variant, that need to appear as a subheading of a chapter common to other variants.
    For example the tasks/task/start .prx config option should be documented in the Task Configuration chapter even though it's implemented in the RTOS component.
    Since x.py doesn't know how to gather content from multiple docs.md into the same chapter, those subsections have to be written in the docs.md of the common component, and pystache'd out of variants they're not applicable to.

optimise-timeout-timer-usage
    This applies to message_queue_wait_timeout, mutex_lock_timeout, and sem_wait_timeout:
    Benno pointed out that it should be possible to simply set the oneshot timer once, rather than disabling and re-requesting it (or in the case of message-queues, calling sleep) every time the waiter is woken.
    Apart from being more efficient, this would also reduce the code footprint.
    However, it might also be necessary to leak variant-specific implementation (i.e. the use of timers) into the generic mq/mutex/sem component in order to achieve this.

doc-api-task-switch-behavior
    The user documentation needs to disclose the behavior of API functions with regards to whether they may cause task switching and under what circumstances.
    We need to audit the documentation and make sure this is done consistently across all the relevant API functions.

re-review-rework-requests
    After fixing the x.py task pre-integration check, it finds a number of tasks in the pm/reviews directory for which there existed non-"accepted" reviews by a particular author that were not followed by an "accepted" review by that author in a later round.
    Of these task branches, the following were subsequently merged to the development head:
        review-0.benno for task chvVia-separate_timer_and_interrupt_components is not "accepted"
        review-0.benno for task 8n1fwa-extended-client-repositories is not "accepted"
        review-1.joseph for task ULxvv5-handle-zero-mutexes is not "accepted"
        review-0.benno for task R7AxJQ-mutex-holder-get-none is not "accepted"
        review-0.ihor.kuz for task g256JD-kochab-mutex-timeout is not "accepted"
        review-0.benno for task HFMqZp-prx-includes is not "accepted"
    These may need to be re-reviewed by the authors concerned to make sure any requests for rework were satisfied.

arm-pendsv-immediacy-checks
    The verification team has suggested we may need to revisit the assumption that a pending PendSV exception is activated immediately (1) on rfi from an interrupt handler that set it pending, or (2) on re-enabling PendSV when it is disabled and pending, because the ARM documentation is not very clear on this.
    In the re-enabling case we can at least add a loop that checks it's been handled before returning to user.
    But in the case of rfi, the best we can do at this stage is add some kind of instrumentation or assertion, this will at least tell us if we can rely on our assumption that the hardware will cause PendSV immediately when we expect it.

ppce500-sda-regs
    A feature enabling eChronos use of SDAs (optimization) on PowerPC e500.

fix-qemu-ppce500-irqs
    Some builds of qemu-system-ppc (including the one on the Teamcity servers) don't seem to deliver fixed interval timer interrupts.
    Figure out why, and once that's done, add regression tests for acrux, kochab etc. machine-qemu-ppce500 systems that rely on IRQ delivery.
