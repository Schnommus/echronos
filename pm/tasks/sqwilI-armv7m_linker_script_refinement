<!---
eChronos Real-Time Operating System
Copyright (C) 2015  National ICT Australia Limited (NICTA), ABN 62 102 206 173.

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as published by
the Free Software Foundation, version 3, provided that these additional
terms apply under section 7:

  No right, title or interest in or to any trade mark, service mark, logo
  or trade name of of National ICT Australia Limited, ABN 62 102 206 173
  ("NICTA") or its licensors is granted. Modified versions of the Program
  must be plainly marked as such, and must not be distributed using
  "eChronos" as a trade mark or product name, or misrepresented as being
  the original Program.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.

@TAG(NICTA_DOC_AGPL)
-->

# Motivation

- There are some issues with the armv7m linker script the RTOS uses.
- For example, if one attempts to link a system where the .text region has a size that is not aligned, the linker places the .rodata section at a misaligned address.
- This results in unintended behaviour at runtime.
- Additionally, there is no static checking in place to determine whether user applications fit within device flash and sram.

# Goals

- Remove possibility of alignment issues similar to those above.
- Rewrite the linker script using MEMORY declarations so the linker is able to determine memory bounds.
- Add parameters to the armv7m vectable.py schema such that one can provide the parameters needed to perform this checking.
- Update the included stm32-discovery package to provide correct flash & sram ranges.
- Investigate possibility of using the --print-memory-usage ld option to provide summarized memory metrics when an armv7m system is built.

# Test Plan

- Ensure all regression tests still pass
- Verify stm32 example systems still work on the stm32-discovery hardware
- Verify changes on another manufacturer's armv7m hardware
- Test cases where the linker should fail due to excessive memory usage
- Test cases where the linker should force alignment due to misaligned section sizes
- Code review
